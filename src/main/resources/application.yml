# 开发环境配置
server:
  # 服务器的HTTP端口，默认为8080
  port: 8080
  servlet:
    # 应用的访问路径
    context-path: /

spring:
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.1.18:3306/test?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&autoReconnect=true&rewriteBatchedStatements=true
    username: root
    password: 123456
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      minimum-idle: 5
      maximum-pool-size: 15
      auto-commit: true
      idle-timeout: 30000
      pool-name: HikariCP
      max-lifetime: 900000
      connection-timeout: 15000
      connection-test-query: select 1
  redis:
    # 地址
    host: 192.168.1.18
    # 端口，默认为6379
    port: 6379
    # 数据库索引
    database: 0
    # 密码(如没有密码请注释掉)
    password: 123456
    # 连接超时时间
    timeout: 10s
    # 是否开启ssl
    ssl: false

redisson:
  # redis key前缀
  keyPrefix: xkc
  # 线程池数量
  threads: 4
  # Netty线程池数量
  nettyThreads: 8
  # 单节点配置
  singleServerConfig:
    # 客户端名称
    clientName: xkc-iot-client
    # 最小空闲连接数
    connectionMinimumIdleSize: 8
    # 连接池大小
    connectionPoolSize: 32
    # 连接空闲超时，单位：毫秒
    idleConnectionTimeout: 10000
    # 命令等待超时，单位：毫秒
    timeout: 3000
    # 发布和订阅连接池大小
    subscriptionConnectionPoolSize: 50


# MyBatisPlus配置
# https://baomidou.com/config/
mybatis-plus:
  # 对应的 XML 文件位置
  mapperLocations: classpath*:mapper/*Mapper.xml
  # 实体扫描，多个package用逗号或者分号分隔
  typeAliasesPackage: com.binarywang.demo.**.model
  global-config:
    # 是否打印 Logo banner
    banner: true
    dbConfig:
      # 主键类型
      # AUTO 自增 NONE 空 INPUT 用户输入 ASSIGN_ID 雪花 ASSIGN_UUID 唯一 UUID
      idType: ASSIGN_ID
      # 逻辑已删除值
      logicDeleteValue: 2
      # 逻辑未删除值
      logicNotDeleteValue: 0
      # 字段验证策略之 insert,在 insert 的时候的字段验证策略
      # IGNORED 忽略 NOT_NULL 非NULL NOT_EMPTY 非空 DEFAULT 默认 NEVER 不加入 SQL
      insertStrategy: NOT_NULL
      # 字段验证策略之 update,在 update 的时候的字段验证策略
      updateStrategy: NOT_NULL
      # 字段验证策略之 select,在 select 的时候的字段验证策略既 wrapper 根据内部 entity 生成的 where 条件
      where-strategy: NOT_NULL

wx:
  mp:
    app-id: '@app-id'
    secret: '@secret'
    token: '@token'
    aesKey: '@aesKey'
    config-storage:
      type: redisson
      key-prefix: wxmp
      redis:
        host: 192.168.1.18
        port: 6379
        password: 123456
        database: 0
        timeout: 10000
      http-client-type: HttpClient
      http-proxy-host: ''
      http-proxy-port: ''
      http-proxy-username: ''
      http-proxy-password: ''
  miniapp:
    appid: '@appid'
    secret: '@secret'
    token: '@token'
    aesKey: '@aesKey'
    config-storage:
      type: redisson
      key-prefix: wxwa
      redis:
        host: 192.168.1.18
        port: 6379
        password: 123456
        database: 0
        timeout: 10000
      http-client-type: HttpClient
      http-proxy-host: ''
      http-proxy-port: ''
      http-proxy-username: ''
      http-proxy-password: ''
    # 消息格式，XML或者JSON.
    msgDataFormat: 'XML'
